@model Locadora.Models.ViewModels.JogoViewModel

@{
    ViewBag.Title = "CreateJogo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>CreateJogo</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Jogo</h4>
        <hr />
        <div class="text-info">
            @Html.HiddenFor(model => model.Message, htmlAttributes: new { @class = "text-info" })
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.JogoProp.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JogoProp.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JogoProp.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JogoProp.Ano, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JogoProp.Ano, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JogoProp.Ano, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Imagem, "Capa:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Imagem, new { type = "file" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JogoProp.IdGenero, "Gênero: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.JogoProp.IdGenero, Model.ListaGeneros, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Plataformas: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <table class="col-md-10" style="width:300px">
                <tr>
                    @* //todo:buscar validação para checkboxes e imagem *@
                    @for (int i = 0; i < Model.ListaConsoles.Count(); i++)
                    {
                        var console = Model.ListaConsoles.ElementAt(i);
                        string strIdConsole = ".IdConsole";
                        string hiddenValue = string.Format("PJ{0}", i.ToString());
                        string checkboxName = string.Format("JogoProp.PlataformasJogo[{0}]{1}", hiddenValue, strIdConsole);

                        <td>
                            <input type="hidden" name="JogoProp.PlataformasJogo.Index" value="@hiddenValue"/>
                            <input type="checkbox" name="@checkboxName" value="@console.IdConsole" />
                            <label for="@checkboxName">@console.NomeConsole</label>
                        </td>
                    }
                </tr>
            </table>

        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>

        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
